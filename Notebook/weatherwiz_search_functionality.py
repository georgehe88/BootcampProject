# -*- coding: utf-8 -*-
"""WeatherWiz Search Functionality.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ci6o4cxPfosLoF7udg4RnS4Q9q5eUyaB
"""

import requests

class PirateWeatherAPI:
    def __init__(self, api_key):
        self.base_url = "https://api.pirateweather.net/forecast/"
        self.api_key = api_key

    def get_weather_by_city(self, city_name):
        url = f"{self.base_url}{self.api_key}/{city_name}"
        return self._make_request(url)

    def get_weather_by_zip(self, zip_code):
        url = f"{self.base_url}{self.api_key}/{zip_code}"
        return self._make_request(url)

    def get_weather_by_coordinates(self, latitude, longitude):
        url = f"{self.base_url}{self.api_key}/{latitude},{longitude}"
        return self._make_request(url)

    def _make_request(self, url):
        response = requests.get(url)
        return response.json()

# Example usage
if __name__ == "__main__":
    api_key = "79zczrSjDkIR6wOI2bl1AIMV77l04TQr"
    weather_api = PirateWeatherAPI(api_key)

    # Search by city
    city_name = "New York"
    city_weather = weather_api.get_weather_by_city(city_name)
    print(f"Weather in {city_name}: {city_weather}")

    # Search by zip code
    zip_code = "10001"
    zip_weather = weather_api.get_weather_by_zip(zip_code)
    print(f"Weather in {zip_code}: {zip_weather}")

    # Search by coordinates
    latitude = 40.7128
    longitude = -74.0060
    coordinates_weather = weather_api.get_weather_by_coordinates(latitude, longitude)
    print(f"Weather at coordinates ({latitude}, {longitude}): {coordinates_weather}")

import requests

BASE_URL = "https://api.pirateweather.net/forecast/"
API_KEY = "9Pn8CfvVbD6NaHdukQWoo0T5MaFGXwVJ"
LATITUDE = "40.7128"
LONGITUDE = "-74.006"
TIME = "current"
EXCLUDE = "minutely,daily"
UNITS = "auto"
EXTEND = "hourly"
TZ = "auto"

url = f"{BASE_URL}{API_KEY}/{LATITUDE},{LONGITUDE},{TIME}?exclude={EXCLUDE}&units={UNITS}&extend={EXTEND}&tz={TZ}"

response = requests.get(url).json()
print(response)

import requests

BASE_URL = "https://api.pirateweather.net/forecast/"
API_KEY = "9Pn8CfvVbD6NaHdukQWoo0T5MaFGXwVJ"

def get_weather(location):
    # Check if the location is numeric (assuming it's coordinates if numeric)
    if location.replace('.', '').isdigit():
        # Assume coordinates
        latitude, longitude = location.split(',')
        url = f"{BASE_URL}{API_KEY}/{latitude},{longitude},current"
    else:
        # Check if the location contains a comma (assuming it's city, coordinates)
        if ',' in location:
            # Assume city, coordinates
            city, coordinates = location.split(',', 1)
            url = f"{BASE_URL}{API_KEY}/{coordinates},current"
        else:
            # Assume city or zip code
            url = f"{BASE_URL}{API_KEY}/{location},current"

    # Add additional parameters
    url += "?exclude=minutely,daily&units=auto&extend=hourly&tz=auto"

    # Send the request and get the response
    response = requests.get(url).json()
    return response

# Example usage:
location = input("Enter city, zip code, or coordinates: ")
weather_data = get_weather(location)
print(weather_data)

import requests

BASE_URL = "https://api.pirateweather.net/forecast/"
API_KEY = "9Pn8CfvVbD6NaHdukQWoo0T5MaFGXwVJ"

def get_weather(location, units='auto'):
    # Construct the URL based on the location and API key
    url = f"{BASE_URL}{API_KEY}/{location}?&units={units}"

    try:
        # Send the request and get the response
        response = requests.get(url)

        # Check if the request was successful (status code 200)
        response.raise_for_status()

        # Parse JSON response
        weather_data = response.json()
        return weather_data
    except requests.exceptions.RequestException as e:
        # Print error message if request was not successful
        print(f"HTTP error occurred: {e}")
        return None

# Example usage:
location = input("Enter city, zip code, or coordinates: ")
weather_data = get_weather(location)
if weather_data:
    print(weather_data)

import requests

BASE_URL = "https://api.pirateweather.net/forecast/"
API_KEY = "9Pn8CfvVbD6NaHdukQWoo0T5MaFGXwVJ"

def get_weather(location, units='auto'):
    try:
        # Construct the URL based on the location and API key
        url = f"{BASE_URL}{API_KEY}/{location}?exclude=minutely,daily&units={units}&extend=hourly&tz=auto"

        # Send the request and get the response
        response = requests.get(url)

        # Check if the request was successful (status code 200)
        response.raise_for_status()

        # Parse JSON response
        weather_data = response.json()
        return weather_data
    except requests.exceptions.RequestException as e:
        # Print error message if request was not successful
        print(f"HTTP error occurred: {e}")
        return None

# Example usage:
location = f"{LATITUDE},{LONGITUDE},{TIME}"
weather_data = get_weather(location, units=UNITS)
if weather_data:
    print(weather_data)

import requests

BASE_URL = "https://api.pirateweather.net/forecast/"
API_KEY = "9Pn8CfvVbD6NaHdukQWoo0T5MaFGXwVJ"

def get_weather(latitude, longitude):
    try:
        # Construct the URL based on the location and API key
        location = f"{latitude},{longitude}"
        url = f"{BASE_URL}{API_KEY}/{location}?exclude=minutely,daily&extend=hourly&tz=auto"

        # Send the request and get the response
        response = requests.get(url)

        # Check if the request was successful (status code 200)
        response.raise_for_status()

        # Parse JSON response
        weather_data = response.json()
        return weather_data
    except requests.exceptions.RequestException as e:
        # Print error message if request was not successful
        print(f"HTTP error occurred: {e}")
        return None

# Example usage:
latitude = input("Enter latitude: ")
longitude = input("Enter longitude: ")

weather_data = get_weather(latitude, longitude)
if weather_data:
    print(weather_data)

import requests

BASE_URL = "https://api.pirateweather.net/forecast/"
API_KEY = "9Pn8CfvVbD6NaHdukQWoo0T5MaFGXwVJ"

def get_weather(location):
    try:
        # Construct the URL based on the location and API key
        if location.replace(',', '').replace('.', '').isdigit():
            # Assume coordinates
            url = f"{BASE_URL}{API_KEY}/{location}?exclude=minutely,daily&extend=hourly&tz=auto"
        else:
            # Assume city or zip code
            url = f"{BASE_URL}{API_KEY}/{location}?exclude=minutely,daily&extend=hourly&tz=auto"

        # Send the request and get the response
        response = requests.get(url)

        # Check if the request was successful (status code 200)
        response.raise_for_status()

        # Parse JSON response
        weather_data = response.json()
        return weather_data
    except requests.exceptions.RequestException as e:
        # Print error message if request was not successful
        print(f"HTTP error occurred: {e}")
        return None

# Example usage:
location = input("Enter city, zip code, or coordinates: ")
weather_data = get_weather(location)
if weather_data:
    print(weather_data)